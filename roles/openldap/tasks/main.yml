---
# tasks file for openldap
- name: Install OpenLDAP Client and Server
  yum:
    name:
     - openldap-clients
     - openldap-servers
     - openldap
     - python-ldap
    state: present

- name: Enable OpenLDAP Service
  service:
    name: slapd
    enabled: True
    state: started

- name: Copy configuration ldif
  copy:
    src: passwords.ldif
    dest: /home/vagrant/passwords.ldif

- name: Apply Password configuration
  command: >
    ldapmodify -Y EXTERNAL -H ldapi://
    -f /home/vagrant/passwords.ldif

- name: Add Schemas
  command: >
    ldapadd -Y EXTERNAL -H ldapi://
    -f /etc/openldap/schema/{{ item }}.ldif
  with_items:
    - cosine
    - inetorgperson

- name: Create ACLs to Allow Auth and Queries
  ldap_attr:
    dn: 'olcDatabase={2}hdb,cn=config'
    name: olcAccess
    values: "{{ ldap_acls }}"
    state: exact

- name: Create Root DN
  ldap_entry:
    bind_dn: 'cn={{ ldap_db_root_user_cn }},{{ ldap_suffix }}'
    bind_pw: '{{ ldap_db_root_pw }}'
    dn: "{{ ldap_suffix }}"
    state: present
    objectClass:
      - "dcObject"
      - "organization"
      - "top"
    attributes:
      dc: "mpgdemolab"
      o: "Example Org"

- name: Make sure toplevel OUs exist
  ldap_entry:
    bind_dn: 'cn={{ ldap_db_root_user_cn }},{{ ldap_suffix }}'
    bind_pw: '{{ ldap_db_root_pw }}'
    dn: "{{ item }},{{ ldap_suffix }}"
    objectClass:
      - "organizationalUnit"
      - "top"
    attributes:
      ou: "{{ item }}"
    state: present
  with_items: "{{ toplevelOUs }}"

- name: Create Ansible Tower User
  ldap_entry:
    bind_dn: 'cn={{ ldap_db_root_user_cn }},{{ ldap_suffix }}'
    bind_pw: '{{ ldap_db_root_pw }}'
    dn: "cn=tower,ou=applications,{{ ldap_suffix }}"
    objectClass:
      - "person"
      - "top"
    attributes:
      userPassword: 'password1'
      sn: Tower
      cn: Tower
    state: present

- name: Create A Test User
  ldap_entry:
    bind_dn: 'cn={{ ldap_db_root_user_cn }},{{ ldap_suffix }}'
    bind_pw: '{{ ldap_db_root_pw }}'
    dn: "uid=testuser1,ou=people,{{ ldap_suffix }}"
    objectClass:
      - "inetOrgPerson"
      - "person"
      - "organizationalPerson"
      - "top"
    attributes:
      userPassword: 'password1'
      sn: User
      cn: TestUser
      givenName: Test
      uid: testuser1
      userPassword: password1
      mail: 'testuser@mpgdemolab.com'
    state: present

- name: Create A Test Group
  ldap_entry:
    bind_dn: 'cn={{ ldap_db_root_user_cn }},{{ ldap_suffix }}'
    bind_pw: '{{ ldap_db_root_pw }}'
    dn: "cn=testgroup,ou=groups,{{ ldap_suffix }}"
    objectClass:
      - "groupOfNames"
      - "top"
    attributes:
      cn: testgroup
      member:
        - 'uid=testuser1,ou=people,dc=mpgdemolab,dc=com'
    state: present